ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
getPalette = colorRampPalette(brewer.pal(9, "BrBG"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
getPalette = colorRampPalette(brewer.pal(9, "RdYIBu"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
getPalette = colorRampPalette(brewer.pal(9, "RdYlBu"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
png(file = paste0("./method_compare_result_summary.png"),
width = 13, height = 8, res = 300,units = "in")
p
dev.off()
1-0.017
5*10*3*5*22
2*10*3*5*22
setwd("/Users/zhangh24/GoogleDrive/multi_ethnic/result/LD_simulation_new")
load("data_for_plot.rdata")
head(LD.clump.result.plot)
LD.clump.result.plot
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
library(ggplot2)
LD.clump.result.plot
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
source("theme_publication.R")
theme_Publication <- function(base_size=12) {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, )
+ theme(plot.title = element_text(face = "bold",
size = rel(1.1), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_line(colour="#f0f0f0"),
panel.grid.minor = element_line(colour="#f0f0f0"),
legend.key = element_rect(colour = NA),
#legend.position = "bottom",
#legend.direction = "horizontal",
#legend.key.size= unit(0.2, "cm"),
#legend.margin = unit(0, "cm"),
legend.title = element_text(face="bold.italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
scale_fill_Publication <- function(...){
library(scales)
discrete_scale("fill","Publication",manual_pal(values = c("#386cb0","#EF7E3D","#FFD042","#7fc97f","#004953","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
scale_colour_Publication <- function(...){
library(scales)
discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#EF7E3D","chartreuse4","#7fc97f","#004953","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
library(ggplot2)
LD.clump.result.plot
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
LD.clump.result.plot
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
setwd("/Users/zhangh24/Desktop/compare_method_plot")
load("data_for_plot.rdata")
source("theme_publication.R")
library(RColorBrewer)
setwd("/Users/zhangh24/Desktop/compare_method_plot")
load("data_for_plot.rdata")
source("theme_publication.R")
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (sample size for EUR = 100k)")
p
method <- as.character(LD.clump.result.plot$method_vec)
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T ",
"EUR LDpred ",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
LD.clump.result.plot$method_vec <- method.fac
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (sample size for EUR = 100k)")
p
setwd("/Users/zhangh24/Desktop/compare_method_plot")
load("data_for_plot.rdata")
source("theme_publication.R")
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
method <- as.character(LD.clump.result.plot$method_vec)
method
idx <- which(method=="P+T")
method[idx] <- "Population-specific P+T"
idx <- which(method=="LDpred")
method[idx] <- "Population-specific P+T"
idx <- which(method=="EUR P+T PRS")
method[idx] <- "EUR LDpred PRS"
idx <- which(method=="EUR LDpred")
method[idx] <- "EUR P+T"
idx <- which(method=="2DLD")
method[idx] <- "2DP+T"
idx <- which(method=="2DLD-EB")
method[idx] <- "2DP+T-EB"
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T",
"EUR LDpred ",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
method.fac
method
idx <- which(method=="P+T")
method[idx] <- "Population-specific P+T"
idx <- which(method=="LDpred")
method[idx] <- "Population-specific P+T"
idx <- which(method=="EUR P+T PRS")
method[idx] <- "EUR LDpred PRS"
idx <- which(method=="EUR LDpred")
method[idx] <- "EUR P+T"
idx <- which(method=="2DLD")
method[idx] <- "2DP+T"
idx <- which(method=="2DLD-EB")
method[idx] <- "2DP+T-EB"
idx <- which(method=="P+T")
method[idx] <- "Population-specific P+T"
idx <- which(method=="LDpred")
method[idx] <- "Population-specific P+T"
idx <- which(method=="EUR P+T PRS")
method[idx] <- "EUR P+T"
idx <- which(method=="EUR LDpred PRS")
method[idx] <- "EUR LDpred"
idx <- which(method=="2DLD")
method[idx] <- "2DP+T"
idx <- which(method=="2DLD-EB")
method[idx] <- "2DP+T-EB"
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T",
"EUR LDpred ",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
method.fac
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
method <- as.character(LD.clump.result.plot$method_vec)
idx <- which(method=="P+T")
method[idx] <- "Population-specific P+T"
idx <- which(method=="LDpred")
method[idx] <- "Population-specific P+T"
idx <- which(method=="EUR P+T PRS")
method[idx] <- "EUR P+T"
idx <- which(method=="EUR LDpred PRS")
method[idx] <- "EUR LDpred"
idx <- which(method=="2DLD")
method[idx] <- "2DP+T"
idx <- which(method=="2DLD-EB")
method[idx] <- "2DP+T-EB"
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T",
"EUR LDpred ",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
method.fac
method
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T",
"EUR LDpred",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
LD.clump.result.plot$method_vec <- method.fac
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (sample size for EUR = 100k)")
p
png(file = paste0("./method_compare_result_summary.png"),
width = 13, height = 8, res = 300,units = "in")
p
dev.off()
setwd("/Users/zhangh24/Desktop/compare_method_plot")
load("data_for_plot.rdata")
source("theme_publication.R")
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (Sample Size for EUR = 100k)")
p
png(file = paste0("./method_compare_result_summary.png"),
width = 13, height = 8, res = 300,units = "in")
p
dev.off()
setwd("/Users/zhangh24/Desktop/compare_method_plot")
load("data_for_plot.rdata")
source("theme_publication.R")
library(RColorBrewer)
colourCount = length(unique(LD.clump.result.plot$method_vec))
getPalette = colorRampPalette(brewer.pal(9, "Paired"))
method <- as.character(LD.clump.result.plot$method_vec)
idx <- which(method=="P+T")
method[idx] <- "Population-specific P+T"
idx <- which(method=="LDpred")
method[idx] <- "Population-specific LDpred"
idx <- which(method=="EUR P+T PRS")
method[idx] <- "EUR P+T"
idx <- which(method=="EUR LDpred PRS")
method[idx] <- "EUR LDpred"
idx <- which(method=="2DLD")
method[idx] <- "2DP+T"
idx <- which(method=="2DLD-EB")
method[idx] <- "2DP+T-EB"
method.fac <- factor(method,
levels = c("Population-specific P+T",
"Population-specific LDpred",
"EUR P+T",
"EUR LDpred",
"SNPs in EUR P+T + target coefficients",
"SNPs in EUR P+T + EB coefficients",
"2DP+T",
"2DP+T-EB",
"ME-Bayes"))
LD.clump.result.plot$method_vec <- method.fac
p <- ggplot(LD.clump.result.plot,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample size for minority group")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
scale_fill_manual(values = getPalette(colourCount))+
ggtitle("Prediction comparasion (sample size for EUR = 100k)")
p
p
png(file = paste0("./method_compare_result_summary.png"),
width = 13, height = 8, res = 300,units = "in")
p
dev.off()
2*5*3*10*4
2*5*3*3*4
5*3*4*10*2
5*3*4*3*2
5*3*4*10*2
5*3*10*22*2
theme_Publication <- function(base_size=12) {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, )
+ theme(plot.title = element_text(face = "bold",
size = rel(1.1), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(size = rel(1)),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_line(colour="#f0f0f0"),
panel.grid.minor = element_line(colour="#f0f0f0"),
legend.key = element_rect(colour = NA),
#legend.position = "bottom",
#legend.direction = "horizontal",
#legend.key.size= unit(0.2, "cm"),
#legend.margin = unit(0, "cm"),
legend.title = element_text(face="bold.italic"),
legend.text = element_text(size = rel(1)),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
scale_fill_Publication <- function(...){
library(scales)
discrete_scale("fill","Publication",manual_pal(values = c("#386cb0","#EF7E3D","#FFD042","#7fc97f","#004953","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
scale_colour_Publication <- function(...){
library(scales)
discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#EF7E3D","chartreuse4","#7fc97f","#004953","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
df <- mtcars
df$cyl <- factor(df$cyl)
df$vs <- factor(df$vs)
library(ggplot2)
p <- ggplot(df,aes(x=cyl, fill=interaction(cyl,vs))) + geom_bar(position="stack")
# Breaks
brks <- levels(interaction(df$cyl,df$vs))
# Values - Colors
library(scales)
pal <- hue_pal()(3)
cls <- as.character(c(sapply(pal,alpha,0.3),sapply(pal,alpha,1)))
# Labels
lbls <- paste(levels(df$cyl), "-", rep(levels(df$vs),each=3))
p  + scale_fill_manual(name ='Cyl - Vs', breaks=brks, values=cls, labels=lbls)
library(ggplot2)
library(grid)
library(gridExtra)
myleg <- structure(list(lett = structure(c(1L, 1L, 2L, 2L, 3L, 3L, 3L,
3L), .Label = c("a", "b", "h"), class = "factor"), num = c(1L,
2L, 1L, 2L, 1L, 2L, 3L, 4L)), .Names = c("lett", "num"),
class = "data.frame", row.names = c(NA, -8L))
getLegend <- function(p) {
g <- ggplotGrob(p)
k <- which(g$layout$name=="guide-box")
g$grobs[[k]]
}
p1 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#f8766d") +scale_alpha_discrete(name="red legend",labels=c("red lab 2","red lab 1"),breaks=c("3","4"))
p2 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#00ba38") +scale_alpha_discrete(name="green legend",labels=c("green lab 2","green lab 1"),breaks=c("3","4"))
p3 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#619cff") +scale_alpha_discrete(name="blue legend",labels=c("blue lab 4","blue lab 3","blue lab 2", "blue lab 1"))
p <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +
geom_bar(position=position_stack(reverse=T)) +
scale_alpha_discrete(range=c(1,.1), name="alpha legend",
labels=c("alpha lab 4","alpha lab 3","alpha lab 2", "alpha lab 1")) +
labs(title="initial bar plot for data")
g <- ggplotGrob(p)
k <- which(g$layout$name=="guide-box")
g$grobs[[k]] <- grid.arrange(getLegend(p1),getLegend(p2),getLegend(p3),ncol=1)
grid.draw(g)
myleg
getLegend <- function(p) {
g <- ggplotGrob(p)
k <- which(g$layout$name=="guide-box")
g$grobs[[k]]
}
p1 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#f8766d") +scale_alpha_discrete(name="red legend",labels=c("red lab 2","red lab 1"),breaks=c("3","4"))
p2 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#00ba38") +scale_alpha_discrete(name="green legend",labels=c("green lab 2","green lab 1"),breaks=c("3","4"))
p3 <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +geom_bar(position="stack",fill="#619cff") +scale_alpha_discrete(name="blue legend",labels=c("blue lab 4","blue lab 3","blue lab 2", "blue lab 1"))
p1
p2
p3
p <- ggplot(myleg,aes(lett,alpha=factor(num),fill=lett)) +
geom_bar(position=position_stack(reverse=T)) +
scale_alpha_discrete(range=c(1,.1), name="alpha legend",
labels=c("alpha lab 4","alpha lab 3","alpha lab 2", "alpha lab 1")) +
labs(title="initial bar plot for data")
p
g <- ggplotGrob(p)
g
k <- which(g$layout$name=="guide-box")
g$grobs[[k]] <- grid.arrange(getLegend(p1),getLegend(p2),getLegend(p3),ncol=1)
grid.draw(g)

install.packages("kernlab")
library(kernlab)
library(bartMachine)
install.packages("rJava")
library(kernlab)
library(bartMachine)
library(rJava)
library(rJava)
install.packages("rJava")
library(rJava)
sl_lib = c("SL.xgboost", "SL.randomForest", "SL.glmnet", "SL.nnet", "SL.ksvm",
"SL.bartMachine", "SL.kernelKnn", "SL.rpartPrune", "SL.lm", "SL.mean")
# Fit XGBoost, RF, Lasso, Neural Net, SVM, BART, K-nearest neighbors, Decision Tree,
# OLS, and simple mean; create automatic ensemble.
result = SuperLearner(Y = Boston$medv, X = Boston[, -14], SL.library = sl_lib)
install.packages("KernelKnn")
#install.packages("rJava")
#install.packages("bartMachine")
#install.packages("KernelKnn")
#library(rJava)
library(kernlab)
library(bartMachine)
library(KernelKnn)
sl_lib = c("SL.xgboost", "SL.randomForest", "SL.glmnet", "SL.nnet", "SL.ksvm",
"SL.kernelKnn", "SL.rpartPrune", "SL.lm", "SL.mean")
# Fit XGBoost, RF, Lasso, Neural Net, SVM, BART, K-nearest neighbors, Decision Tree,
# OLS, and simple mean; create automatic ensemble.
result = SuperLearner(Y = Boston$medv, X = Boston[, -14], SL.library = sl_lib)
result
train_obs = sample(nrow(data), 150)
x_train = data[train_obs, ]
x_holdout = data[-train_obs, ]
outcome_bin = outcome
y_train = outcome_bin[train_obs]
y_holdout = outcome_bin[-train_obs]
sl_lasso = SuperLearner(Y = y_train, X = x_train, family = gaussian(),
SL.library = sl_lib)
5*3*4*10*2
3*4*22*3*4*2
3*4*22*3*1*2
5*10*3*2
4*3*3*2
144*5*4
144*5*4/12
3*4*22*3*1*2
#standard LD clumping results
load(paste0("LD.clump.result.GA_",i1,".rdata"))
i1 = 1
LD.clump.result <- LD.result.list[[1]]
#standard LD clumping results
load(paste0("LD.clump.result.GA_",i1,".rdata"))
setwd("/Users/zhangh24/GoogleDrive/multi_ethnic/result/LD_simulation_GA")
source("../../code/LD_simulation_large/theme_Publication.R")
library(ggplot2)
library(ggsci)
library(dplyr)
library(RColorBrewer)
library(grid)
library(gridExtra)
#library(RColorBrewer)
colourCount = 9
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
#standard LD clumping results
load(paste0("LD.clump.result.GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
LD.clump.result
#Best EUR result
load(paste0("best_eur_snp_result_GA_",i1,".rdata"))
LD.clump.result
setwd("/Users/zhangh24/GoogleDrive/multi_ethnic/result/LD_simulation_GA")
source("../../code/LD_simulation_large/theme_Publication.R")
library(ggplot2)
library(ggsci)
library(dplyr)
library(RColorBrewer)
library(grid)
library(gridExtra)
#library(RColorBrewer)
colourCount = 9
#library(RColorBrewer)
colourCount = 12
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
getPalette = colorRampPalette(brewer.pal(12, "Set1"))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
#standard LD clumping results
load(paste0("LD.clump.result.GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
sample_size <- factor(rep(c("15000","45000","80000","100000"),15),
levels=c("15000","45000","80000","100000"))
# sample_size <- factor(rep(c("15000","45000","80000","100000"),6),
#                                            levels=c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.clump.result$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.clump.result$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec <- factor(cau_vec,
levels = paste0("Causal SNPs Proportion = ",csp))
LD.clump.result <- cbind(LD.clump.result,sample_size,cau_vec)
LD.clump.result$eth.vec <- factor(LD.clump.result$eth.vec,
#levels =c("EUR","AFR","AMR","EAS","SAS"))
levels =c("EUR","AFR","AMR","EAS","SAS"))
load(paste0("LD.clump.result.GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
LD.clump.result <- LD.clump.result[LD.clump.result$eth.vec!="EUR",]
method_vec <- rep("P+T",nrow(LD.clump.result))
LD.clump.result$method_vec = method_vec
LD.clump.result.PT <- LD.clump.result
#Best EUR result
load(paste0("best_eur_snp_result_GA_",i1,".rdata"))
method <- c("eurcoef","tarcoef","eb")
method_nameupdate <- c("Best EUR PRS","Best EUR SNP + target coefficients","Best EUR SNP + EB")
for(q in 1:length(method)){
idx <- which(LD.clump.result$method_vec==method[q])
LD.clump.result$method_vec[idx] <-   method_nameupdate[q]
}
LD.clump.result.EUR <- LD.clump.result
#
#2DLD
load(paste0("LD.clump.result.two.dim_GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
method_vec <- rep("2DLD",nrow(LD.clump.result))
LD.clump.result$method_vec = method_vec
LD.clump.result.2DLD = LD.clump.result
LD.clump.result <- rbind(LD.clump.result.EUR,LD.clump.result.PT)
#"2DLD","2DLD-EB"))
sample_size =  as.character(LD.clump.result$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.clump.result$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.clump.result$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
for(m in 1:4){
idx <- which(LD.clump.result$m_vec==m)
sample_size[idx] <- ssp[m]
}
sample_size = factor(sample_size,
levels = c("15000","45000","80000","100000"))
LD.clump.result <- cbind(LD.clump.result,cau_vec,sample_size)
load("R2.simulation.hapmap3.RData")
res$cau_vec = as.character(res$cau_vec)
idx <- which(res$cau_vec=="Causal SNPs Proportion = 5e-4")
res$cau_vec[idx] = "Causal SNPs Proportion = 5e-04"
res$sample_size = as.character(res$sample_size)
idx <- which(res$sample_size=="1e+05")
res$sample_size[idx] = "100000"
res = res %>%
mutate(m_vec = case_when(sample_size%in%"15000"~1,
sample_size%in%"45000"~2,
sample_size%in%"80000"~3,
sample_size%in%"100000"~4))
res$sample_size = factor(res$sample_size,
levels = c("15000","45000","80000","100000"))
LD.result.LDpred <- res %>%
rename(eth.vec = race,
r2.vec = R2,
method_vec = Method) %>%
filter(GA==i1) %>%
select(eth.vec,r2.vec,cau_vec,sample_size,method_vec,m_vec)
LD.clump.result = LD.clump.result %>%
select(colnames(LD.result.LDpred))
head(LD.clump.result.plot)
LD.clump.result.plot = rbind(LD.clump.result,LD.result.LDpred)
head(LD.clump.result.plot)
LD.clump.result.sub = LD.clump.result %>%
filter(m_vec==1)
save(LD.clump.result.plot,file = paste0("LD.clump.pred.result_GA_",i1,".rdata"))
getwd()
load("./LD_stack/LD.clump.result.GA_",i1,".rdata")
getwd()
load(paste0("./LD_stack/LD.clump.result.GA_",i1,".rdata"))
LD.clump.result.sub
LD.clump.result
LD.result.list
load(paste0("./LD_stack/LD.clump.result.two_way_",i1,".rdata"))
load(paste0("./LD_stack/LD.clump.result.two_way_GA_",i1,".rdata"))
LD.result.2D.stack = LD.result.list[[2]]
LD.result.2D.stack = LD.result.list[[1]]
LD.result.2D.stack
head(LD.result.stack)
LD.result.stack = LD.result.list[[1]]
load(paste0("./LD_stack/LD.clump.result.GA_",i1,".rdata"))
LD.result.stack = LD.result.list[[1]]
load(paste0("./LD_stack/LD.clump.result.two_way_GA_",i1,".rdata"))
LD.result.2D.stack = LD.result.list[[1]]
head(LD.result.2D.stack)
head(LD.clump.result.sub)
LD.clump.result.sub
LD.clump.result
tail(LD.clump.result)
LD.clump.result.sub
load(paste0("LD.clump.result.GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
LD.clump.result <- LD.clump.result[LD.clump.result$eth.vec!="EUR",]
method_vec <- rep("P+T",nrow(LD.clump.result))
LD.clump.result$method_vec = method_vec
LD.clump.result.PT <- LD.clump.result
#Best EUR result
load(paste0("best_eur_snp_result_GA_",i1,".rdata"))
method <- c("eurcoef","tarcoef","eb")
method_nameupdate <- c("Best EUR PRS","Best EUR SNP + target coefficients","Best EUR SNP + EB")
for(q in 1:length(method)){
idx <- which(LD.clump.result$method_vec==method[q])
LD.clump.result$method_vec[idx] <-   method_nameupdate[q]
}
LD.clump.result.EUR <- LD.clump.result
LD.clump.result <- rbind(LD.clump.result.EUR,LD.clump.result.PT)
#"2DLD","2DLD-EB"))
sample_size =  as.character(LD.clump.result$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.clump.result$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.clump.result$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
for(m in 1:4){
idx <- which(LD.clump.result$m_vec==m)
sample_size[idx] <- ssp[m]
}
sample_size = factor(sample_size,
levels = c("15000","45000","80000","100000"))
LD.clump.result <- cbind(LD.clump.result,cau_vec,sample_size)
load("R2.simulation.hapmap3.RData")
res$cau_vec = as.character(res$cau_vec)
idx <- which(res$cau_vec=="Causal SNPs Proportion = 5e-4")
res$cau_vec[idx] = "Causal SNPs Proportion = 5e-04"
res$sample_size = as.character(res$sample_size)
idx <- which(res$sample_size=="1e+05")
res$sample_size[idx] = "100000"
res = res %>%
mutate(m_vec = case_when(sample_size%in%"15000"~1,
sample_size%in%"45000"~2,
sample_size%in%"80000"~3,
sample_size%in%"100000"~4))
res$sample_size = factor(res$sample_size,
levels = c("15000","45000","80000","100000"))
LD.result.LDpred <- res %>%
rename(eth.vec = race,
r2.vec = R2,
method_vec = Method) %>%
filter(GA==i1) %>%
select(eth.vec,r2.vec,cau_vec,sample_size,method_vec,m_vec)
LD.clump.result = LD.clump.result %>%
select(colnames(LD.result.LDpred))
LD.clump.result.plot = rbind(LD.clump.result,LD.result.LDpred)
LD.clump.result.sub = LD.clump.result %>%
filter(m_vec==1)
LD.clump.result.sub = LD.clump.result.plot %>%
filter(m_vec==1)
LD.clump.result.sub
LD.result.stack.com <- rbind(LD.result.stack,LD.result.2D.stack)
head(LD.result.stack.com)
LD.result.stack.com <- rbind(LD.result.stack,LD.result.2D.stack) %>%
filter(eth.vec!="EUR")
LD.result.stack.com
class(LD.clump.result.sub)
str(LD.clump.result.sub)
sample_size =  as.character(LD.result.stack.com$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.result.stack.com$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.clump.result$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
cau_vec
sample_size =  as.character(LD.result.stack.com$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.result.stack.com$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.result.stack.com$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
cau_vec
for(m in 1:1){
idx <- which(LD.result.stack.com$m_vec==m)
sample_size[idx] <- ssp[m]
}
sample_size = factor(sample_size,
levels = c("15000","45000","80000","100000"))
sample_size
LD.result.stack.com <- cbind(LD.result.stack.com,cau_vec,sample_size)
colnames(LD.result.stack.com)
colnames(LD.clump.result.plot)
LD.result.stack.com <- cbind(LD.result.stack.com,cau_vec,sample_size) %>%
LD.result.stack.sub = LD.result.stack.com %>%
select(colnames(LD.clump.result.plot))
colnames(LD.clump.result.plot)
colnames(LD.result.stack.com)
LD.result.stack.sub = LD.result.stack.com %>%
select(colnames(LD.clump.result.plot))
head(LD.result.stack.sub)
LD.clump.result.plot
LD.result.stack.sub = LD.result.stack.com %>%
select(colnames(LD.clump.result.sub))
LD.clump.result.sub
LD.clump.result.plot.sub <- rbind(LD.clump.result.sub,LD.result.stack.sub)
LD.clump.result.plot.sub
table(LD.clump.result.plot.sub$method_vec)
LD.clump.result.plot.sub <- rbind(LD.clump.result.sub,LD.result.stack.sub) %>%
filter(method_vec!="P+T")
head(LD.clump.result.plot.sub)
LD.clump.result.plot.sub
table(LD.clump.result.plot.sub$method_vec)
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR PRS")
dx
jdx
LD.clump.result.plot.sub$method_vec
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR PRS")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR PRS (C+T)"
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR SNP + target coefficients")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR SNP + target coefficients (C+T)"
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR SNP + EB")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR SNP + EB(C+T)"
LD.clump.result.plot.sub
table(LD.clump.result.plot.sub$method_vec)
method_vec = factor(method_vec,
levels = c("C+T","C+T max","C+T SL",
"LDpred2",
"Best EUR PRS (C+T)",
"Best EUR SNP + target coefficients (C+T)",
"Best EUR SNP + EB(C+T)",
"EUR LDpred2",
"2DLD",
"2DLD-max",
"2DLD-SL",
"MEBayes"))
method_vec
method_vec = factor(LD.clump.result.plot.sub$method_vec,
levels = c("C+T","C+T max","C+T SL",
"LDpred2",
"Best EUR PRS (C+T)",
"Best EUR SNP + target coefficients (C+T)",
"Best EUR SNP + EB(C+T)",
"EUR LDpred2",
"2DLD",
"2DLD-max",
"2DLD-SL",
"MEBayes"))
method_vec
LD.clump.result.plot.sub$method_vec = method_vec
p <- ggplot(LD.clump.result.sub,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
#scale_fill_nejm()+
scale_fill_manual(values = getPalette(colourCount)) +
theme(axis.text = element_text(size = rel(0.9)),
legend.text = element_text(size = rel(0.9)))+
ggtitle("Prediction performance comparasion (Sample Size for EUR = 100k)")
p
LD.clump.result.sub$method_vec
p <- ggplot(LD.clump.result.plot.sub,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
#scale_fill_nejm()+
scale_fill_manual(values = getPalette(colourCount)) +
theme(axis.text = element_text(size = rel(0.9)),
legend.text = element_text(size = rel(0.9)))+
ggtitle("Prediction performance comparasion (Sample Size for EUR = 100k)")
p
i1
load("R2.simulation.hapmap3.RData")
for(i1 in 1:2){
load(paste0("LD.clump.result.GA_",i1,".rdata"))
LD.clump.result <- LD.result.list[[1]]
LD.clump.result <- LD.clump.result[LD.clump.result$eth.vec!="EUR",]
method_vec <- rep("P+T",nrow(LD.clump.result))
LD.clump.result$method_vec = method_vec
LD.clump.result.PT <- LD.clump.result
#Best EUR result
load(paste0("best_eur_snp_result_GA_",i1,".rdata"))
method <- c("eurcoef","tarcoef","eb")
method_nameupdate <- c("Best EUR PRS","Best EUR SNP + target coefficients","Best EUR SNP + EB")
for(q in 1:length(method)){
idx <- which(LD.clump.result$method_vec==method[q])
LD.clump.result$method_vec[idx] <-   method_nameupdate[q]
}
LD.clump.result.EUR <- LD.clump.result
#
LD.clump.result <- rbind(LD.clump.result.EUR,LD.clump.result.PT)
#"2DLD","2DLD-EB"))
sample_size =  as.character(LD.clump.result$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.clump.result$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.clump.result$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
for(m in 1:4){
idx <- which(LD.clump.result$m_vec==m)
sample_size[idx] <- ssp[m]
}
sample_size = factor(sample_size,
levels = c("15000","45000","80000","100000"))
LD.clump.result <- cbind(LD.clump.result,cau_vec,sample_size)
load("R2.simulation.hapmap3.RData")
res$cau_vec = as.character(res$cau_vec)
idx <- which(res$cau_vec=="Causal SNPs Proportion = 5e-4")
res$cau_vec[idx] = "Causal SNPs Proportion = 5e-04"
res$sample_size = as.character(res$sample_size)
idx <- which(res$sample_size=="1e+05")
res$sample_size[idx] = "100000"
res = res %>%
mutate(m_vec = case_when(sample_size%in%"15000"~1,
sample_size%in%"45000"~2,
sample_size%in%"80000"~3,
sample_size%in%"100000"~4))
res$sample_size = factor(res$sample_size,
levels = c("15000","45000","80000","100000"))
LD.result.LDpred <- res %>%
rename(eth.vec = race,
r2.vec = R2,
method_vec = Method) %>%
filter(GA==i1) %>%
select(eth.vec,r2.vec,cau_vec,sample_size,method_vec,m_vec)
LD.clump.result = LD.clump.result %>%
select(colnames(LD.result.LDpred))
LD.clump.result.plot = rbind(LD.clump.result,LD.result.LDpred)
LD.clump.result.sub = LD.clump.result.plot %>%
filter(m_vec==1)
save(LD.clump.result.plot,file = paste0("LD.clump.pred.result_GA_",i1,".rdata"))
load(paste0("./LD_stack/LD.clump.result.GA_",i1,".rdata"))
LD.result.stack = LD.result.list[[1]]
load(paste0("./LD_stack/LD.clump.result.two_way_GA_",i1,".rdata"))
LD.result.2D.stack = LD.result.list[[1]]
LD.result.stack.com <- rbind(LD.result.stack,LD.result.2D.stack) %>%
filter(eth.vec!="EUR")
sample_size =  as.character(LD.result.stack.com$method_vec)
ssp = as.character(c("15000","45000","80000","100000"))
cau_vec <- as.character(LD.result.stack.com$l_vec)
csp <- c(0.01,0.001,0.0005)
for(l in 1:3){
idx <- which(LD.result.stack.com$l_vec==l)
cau_vec[idx] <- paste0("Causal SNPs Proportion = ",csp[l])
}
cau_vec = factor(cau_vec,levels = paste0("Causal SNPs Proportion = ",csp))
for(m in 1:1){
idx <- which(LD.result.stack.com$m_vec==m)
sample_size[idx] <- ssp[m]
}
sample_size = factor(sample_size,
levels = c("15000","45000","80000","100000"))
LD.result.stack.com <- cbind(LD.result.stack.com,cau_vec,sample_size)
LD.result.stack.sub = LD.result.stack.com %>%
select(colnames(LD.clump.result.sub))
LD.clump.result.plot.sub <- rbind(LD.clump.result.sub,LD.result.stack.sub) %>%
filter(method_vec!="P+T")
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR PRS")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR PRS (C+T)"
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR SNP + target coefficients")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR SNP + target coefficients (C+T)"
jdx <- which(LD.clump.result.plot.sub$method_vec=="Best EUR SNP + EB")
LD.clump.result.plot.sub$method_vec[jdx] = "Best EUR SNP + EB(C+T)"
method_vec = factor(LD.clump.result.plot.sub$method_vec,
levels = c("C+T","C+T max","C+T SL",
"LDpred2",
"Best EUR PRS (C+T)",
"Best EUR SNP + target coefficients (C+T)",
"Best EUR SNP + EB(C+T)",
"EUR LDpred2",
"2DLD",
"2DLD-max",
"2DLD-SL",
"MEBayes"))
LD.clump.result.plot.sub$method_vec = method_vec
p <- ggplot(LD.clump.result.plot.sub,aes(x= sample_size,y=r2.vec,group=method_vec))+
geom_bar(aes(fill=method_vec),
stat="identity",
position = position_dodge())+
#geom_point(aes(color=method_vec))+
theme_Publication()+
ylab("R2")+
xlab("Sample Size")+
labs(fill = "Method")+
facet_grid(vars(cau_vec),vars(eth.vec))+
#scale_fill_nejm()+
scale_fill_manual(values = getPalette(colourCount)) +
theme(axis.text = element_text(size = rel(0.9)),
legend.text = element_text(size = rel(0.9)))+
ggtitle("Prediction performance comparasion (Sample Size for EUR = 100k)")
p
png(file = paste0("./LD_stack/method_compare_result_size_",m,"_summary_GA_",i1,".png"),
width = 13, height = 8, res = 300,units = "in")
print(p)
dev.off()
}
3*10*3*5*22
